name: CI
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.12" ]
    steps:
      - uses: actions/checkout@v4 # Обновлено до v4
      - name: Debug - List repository contents
        run: ls -R # Добавлен шаг для отладки
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4 # Обновлено до v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run:
            |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install
      - name: Black
        run: poetry run black app

  unit-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.12" ]
    steps:
      - uses: actions/checkout@v4
      - name: Debug - List repository contents
        run: ls -R
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Create .env file from secret # <--- НОВЫЙ ШАГ
        run: |
          echo "${{ secrets.DOTENV_FILE_CONTENT }}" > .env
          # Опционально: проверьте, что файл создан (не выводите содержимое, если оно содержит секреты!)
          ls -l .env
          cat .env | head -n 1 # Только для проверки, что файл не пуст, но не для вывода секретов!
      - name: Install Dependencies
        run:
          |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install
      - name: Run Unit Tests
        run: poetry run pytest tests/unit
