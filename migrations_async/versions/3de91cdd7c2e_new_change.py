from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3de91cdd7c2e'
down_revision: Union[str, Sequence[str], None] = 'b09ed3852bd7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

task_status_enum_type = postgresql.ENUM('PLANNED', 'IN_PROGRESS', 'COMPLETED', name='status')

def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    task_status_enum_type.create(op.get_bind())
    op.add_column('Tasks', sa.Column('status', task_status_enum_type, nullable=False))
    op.add_column('UserProfile', sa.Column('work_duration', sa.Integer(), nullable=False))
    op.add_column('UserProfile', sa.Column('short_break_duration', sa.Integer(), nullable=False))
    op.add_column('UserProfile', sa.Column('long_break_duration', sa.Integer(), nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('UserProfile', 'long_break_duration')
    op.drop_column('UserProfile', 'short_break_duration')
    op.drop_column('UserProfile', 'work_duration')
    op.drop_column('Tasks', 'status')
    task_status_enum_type.drop(op.get_bind())
    # ### end Alembic commands ###
